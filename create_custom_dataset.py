# —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –¥–∞—Ç–∞—Å–µ—Ç
# —Å –µ–≥–æ –ø–æ–º–æ—â—å—é –ø–æ—Ç–æ–º –Ω–µ–π—Ä–æ—Å–µ—Ç—å –±—É–¥–µ—Ç –æ–±—É—á–∞—Ç—å—Å—è

import pygame
import numpy as np
from PIL import Image

pygame.init()

WIDTH, HEIGHT = 280, 280
WIN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("–°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç - –†–∏—Å—É–π—Ç–µ —Ü–∏—Ñ—Ä—ã")

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RADIUS = 5

canvas = pygame.Surface((WIDTH, HEIGHT))
canvas.fill(BLACK)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
current_digit = 0
dataset = {"images": [], "labels": []}

def redraw_window():
    WIN.blit(canvas, (0, 0))
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–∏—Ñ—Ä—É –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
    font = pygame.font.SysFont('Arial', 30)
    text = font.render(f'–†–∏—Å—É–π—Ç–µ —Ü–∏—Ñ—Ä—É: {current_digit}', True, WHITE)
    WIN.blit(text, (10, 10))
    pygame.display.update()

def save_current_digit():
    if len(dataset["images"]) > 0:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –≤ —Ñ–∞–π–ª
        np.savez('custom_dataset.npz', 
                 images=np.array(dataset["images"]), 
                 labels=np.array(dataset["labels"]))
        print(f"‚úÖ –î–∞—Ç–∞—Å–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ü—Ä–∏–º–µ—Ä–æ–≤: {len(dataset['images'])}")

def preprocess_surface(surface):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º pygame surface –≤ numpy array –∫–∞–∫ –≤ MNIST"""
    # –ü–æ–ª—É—á–∞–µ–º –ø–∏–∫—Å–µ–ª–∏
    pixel_array = pygame.surfarray.array3d(surface)
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ grayscale –∏ –∏–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º
    gray_array = 255 - np.mean(pixel_array, axis=2)
    
    # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –¥–æ 28x28
    img = Image.fromarray(gray_array.astype('uint8'))
    img = img.resize((28, 28), Image.LANCZOS)
    
    final_array = np.array(img).astype("float32") / 255.0
    
    return final_array

def main():
    global current_digit
    
    run = True
    drawing = False
    
    print("üé® –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç!")
    print("–¶–∏—Ñ—Ä—ã 0-9: –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏—à—É")
    print("–ü—Ä–æ–±–µ–ª: –æ—á–∏—Å—Ç–∏—Ç—å —Ö–æ–ª—Å—Ç")
    print("S: —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ü–∏—Ñ—Ä—É –≤ –¥–∞—Ç–∞—Å–µ—Ç") 
    print("Enter: –∑–∞–∫–æ–Ω—á–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–∞")
    
    while run:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
            
            if event.type == pygame.MOUSEBUTTONDOWN:
                drawing = True
            
            if event.type == pygame.MOUSEBUTTONUP:
                drawing = False
            
            if event.type == pygame.MOUSEMOTION and drawing:
                pos = pygame.mouse.get_pos()
                pygame.draw.circle(canvas, WHITE, pos, RADIUS)
            
            if event.type == pygame.KEYDOWN:
                # –¶–∏—Ñ—Ä—ã 0-9 - –≤—ã–±–∏—Ä–∞–µ–º –∫–∞–∫—É—é —Ü–∏—Ñ—Ä—É —Ä–∏—Å—É–µ–º
                if event.key in [pygame.K_0, pygame.K_1, pygame.K_2, pygame.K_3, pygame.K_4, 
                                pygame.K_5, pygame.K_6, pygame.K_7, pygame.K_8, pygame.K_9]:
                    current_digit = event.key - pygame.K_0
                    print(f"–¢–µ–ø–µ—Ä—å —Ä–∏—Å—É–µ–º —Ü–∏—Ñ—Ä—É: {current_digit}")
                
                # S - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–∏—Å—É–Ω–æ–∫ –≤ –¥–∞—Ç–∞—Å–µ—Ç
                elif event.key == pygame.K_s:
                    if current_digit is not None:
                        processed_img = preprocess_surface(canvas)
                        dataset["images"].append(processed_img)
                        dataset["labels"].append(current_digit)
                        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Ü–∏—Ñ—Ä–∞ {current_digit}. –í—Å–µ–≥–æ: {len(dataset['images'])}")
                    else:
                        print("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ü–∏—Ñ—Ä—É (0-9)")
                
                # –ü—Ä–æ–±–µ–ª - –æ—á–∏—Å—Ç–∏—Ç—å —Ö–æ–ª—Å—Ç
                elif event.key == pygame.K_SPACE:
                    canvas.fill(BLACK)
                    print("–•–æ–ª—Å—Ç –æ—á–∏—â–µ–Ω")
                
                # Enter - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞—Ç–∞—Å–µ—Ç –∏ –≤—ã–π—Ç–∏
                elif event.key == pygame.K_RETURN:
                    save_current_digit()
                    run = False
        
        redraw_window()
    
    pygame.quit()

if __name__ == "__main__":
    main()